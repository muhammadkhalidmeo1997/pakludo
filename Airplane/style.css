* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  width: 100%;
  height: 100%;
  overflow: auto; 
  background-color: #f0f0f0;
  font-family: sans-serif;
}

header {
  position: fixed;
  top: 0;
  right: 0;
  width: 100%;
  display: flex;
  justify-content: flex-end;
  background: transparent;
  padding: 10px;
  z-index: 10;
}

#menuBtn {
  font-size: 28px;
  background: none;
  border: none;
  cursor: pointer;
}

main {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

#ludoBoard {
  display: relative;
  grid-template-columns: repeat(15, 1fr);
  grid-template-rows: repeat(15, 1fr);
  width: 100vmin;
  height: 100vmin;
  background-color: white;
  border: 5px solid black;
  border-radius: 10px;
}

.cell {
  border: 1px solid #ccc;
}

.base {
  background: transparent !important;
  border: none;
}

#baseOverlay {
  position: absolute;
  top: calc((100vmin / 15) * 0);    /* Adjust these numbers */
  left: calc((100vmin / 15) * 0);
  width: calc((100vmin / 15) * 6);
  height: calc((100vmin / 15) * 6);
  background-image: url('IMG_20250807_222955.jpg');
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  pointer-events: none;
  z-index: 5;
}

const board = document.getElementById("ludoBoard");

for (let row = 0; row < 15; row++) {
  for (let col = 0; col < 15; col++) {
    const cell = document.createElement("div");
    cell.classList.add("cell");

    if ((row < 6 && col < 6) || (row > 8 && col > 8) ||
        (row < 6 && col > 8) || (row > 8 && col < 6)) {
      cell.classList.add("base");
    } else if (row === 7 && col === 7) {
      cell.classList.add("home");
    } else {
      cell.classList.add("path");
    }

    board.appendChild(cell);
  }
}

// Add overlay div for base area background image
const baseOverlay = document.createElement('div');
baseOverlay.id = 'baseOverlay';
board.appendChild(baseOverlay);

}

.path {
  background-color: white;
}

.home {
  background-color: green;

}
